
if '$(executarHomologacao)'='S' then


	/*
	
	//Realiza a junção de todas as planilhas de check realizadas para cada ano 
	*/
	
		
	RaisFinal:
	load Municipality_ID,EconmicAtivity_ID_ISIC as EconomicAtivity_ID_ISIC,[sum(AverageMonthlyWage)],total,Year 
		from F:\Banco de dados\MTE\RAIS_COMPLETA\2002\ValoresTotaisMunicipioISIC2002.csv  (txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2003\ValoresTotaisMunicipioISIC2003.csv  (txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2004\ValoresTotaisMunicipioISIC2004.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2005\ValoresTotaisMunicipioISIC2005.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2006\ValoresTotaisMunicipioISIC2006.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2007\ValoresTotaisMunicipioISIC2007.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2008\ValoresTotaisMunicipioISIC2008.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2009\ValoresTotaisMunicipioISIC2009.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2010\ValoresTotaisMunicipioISIC2010.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2011\ValoresTotaisMunicipioISIC2011.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	load * from F:\Banco de dados\MTE\RAIS_COMPLETA\2012\ValoresTotaisMunicipioISIC2012.csv(txt, utf8, embedded labels, delimiter is ',', msq);
	
	/**/
	store RaisFinal  into F:\Banco de dados\MTE\RAIS_COMPLETA\ValoresTotaisMunicipioISIC.csv (txt);
	
	
		
	/*	
	//Fazemos compatibilizações entre a base do data viva com a da Rais, e unificamos as duas por Municipio, ISIC e Ano
	*/	
	
	NoConcatenate
	
	RaisXDataviva:	
	LOAD year as Year, 
	     left(id_ibge,6) as Municipality_ID, //ibge left(@2,6)	    
	    right(isic_id,4)  as EconomicAtivity_ID_ISIC,// right(@6,4)
	     num_emp as EmpregadoDataviva, 
	      MapSubString('MapRetiraVirgula',wage) as WageDataviva
	FROM
	[F:\Banco de dados\MTE\RAIS_COMPLETA\testRaisISIC.txt] 
(txt, codepage is 1252, embedded labels, delimiter is '\t', msq)

	where Len(isic_id)=5 and Len(id_ibge)=7

;


		
	left join(RaisXDataviva) 
	
	load 
		Municipality_ID, 
	     EconomicAtivity_ID_ISIC,     
	     MapSubString('MapRetiraVirgula',[sum(AverageMonthlyWage)]) as WageRais,
	     //Num#([sum(AverageMonthlyWage)], '#,##') as WageRais,
	     total as EmpregadoRais,
	     Year from
	[F:\Banco de dados\MTE\RAIS_COMPLETA\ValoresTotaisMunicipioISIC.csv]
	 (txt, utf8, embedded labels, delimiter is ',', msq);
	 
	 
	 store RaisXDataviva into [F:\Banco de dados\MTE\RAIS_COMPLETA\RaisXDataviva.csv] (txt);
	drop table RaisXDataviva;
	
	
	
		
	SubRaisXDataviva:
	load 
		Year,Municipality_ID,EconomicAtivity_ID_ISIC, 
		WageRais as WageRaisOriginal,
		index( WageRais, '.' ) as indexRais,
		Len(WageRais) as LenRais,
		if (index( WageRais, '.' ) 	= Len(WageRais) -1 , 
			floor(Num#(WageRais&'0','##0.00'  )),
			if (index( WageRais, '.' ) 	= 0 ,
				floor(Num#(WageRais&'.00','##0.00'  )),	
				if (index( WageRais, '.' ) 	= Len(WageRais) -2 ,
					floor(Num#(WageRais,'##0.00'  )),
											
					if (Len(WageRais) - index( WageRais, '.' ) 	>  2 ,
						floor(Num#(left( WageRais,    index( WageRais, '.' )+2),'##0.00'  )),						
						floor(Num#(WageRais,'##0.00'  ))
						)
					) 
			)
			
			/*
			if (index( WageRais, '.' ) 	= 0 ,
				floor(Num#(WageRais&'.00','##0.00'  )) ,
				
			)*/
		)as WageRais, //'00.00', '.' 
		if (Len(WageRais) - index( WageRais, '.' ) 	>  2 ,
						//floor(Num#(left( WageRais,-    (Len(WageRais) - index( WageRais, '.' ) - 2) ),'##0.00'  )),
						//floor(Num#(left( WageRais,-    4),'##0.00'  )),
						//floor(Num#(WageRais,'##0.00'  ))
						left( WageRais,    index( WageRais, '.' )+2),WageRais
					) as Tst,
		floor(Num#(WageDataviva,'###0.#0', '.' , '')) as WageDataviva,
		if (isnull(EmpregadoRais),0,EmpregadoRais) as EmpregadoRais,
		if (isnull(EmpregadoDataviva),0,EmpregadoDataviva) as EmpregadoDataviva
	
	from [F:\Banco de dados\MTE\RAIS_COMPLETA\RaisXDataviva.csv]  (txt, utf8, embedded labels, delimiter is ',', msq)
	 where Year=$(anoProcessamento) 
	;
	
	NoConcatenate
	
	SubRaisXFinal:
	load 
		Year,Municipality_ID,EconomicAtivity_ID_ISIC, EmpregadoRais,EmpregadoDataviva , WageRaisOriginal, WageRais as WageRaisT,indexRais,LenRais,Tst,
		if (isnull(WageRais),0,WageRais) as WageRais,
		if (isnull(WageDataviva),0,WageDataviva) as WageDataviva,
		if (isnull(WageRais) , 
			0 - WageDataviva,
			WageRais - WageDataviva
		)  as WageDiff	,
		(EmpregadoRais - EmpregadoDataviva) as EmpregadoDiff
	resident SubRaisXDataviva;
	
	drop table SubRaisXDataviva;
	
	
	
	
		
	/*
	//Confere em 2007 casos que o mesmo Employed ID aparece para a mesma Establishment ID
	//Necessário pois existem casos de 2007 que houveram transformação da CBO 1111 e 1112 para alguns Employ ID e Establishment ID, 
	//algo que dá divergência entre o valor do Dataviva e o valor do 
	Rais2007:
		LOAD 
			 
			  	Employee_ID,Establishment_ID,AverageMonthlyWage,BrazilianOcupation_ID
		FROM
		[$(caminhoArquivos)\2007\Rais2007_$(padraoNomeArquivo).csv]
		(txt, utf8, embedded labels, delimiter is ',', msq)		
		;
		
		Rais2007Final:
		LOAD 
			 
			  	Employee_ID,Establishment_ID,count(1) as total,
				concat(AverageMonthlyWage,';'),
				concat(BrazilianOcupation_ID,';')
		resident Rais2007
		group by Employee_ID,Establishment_ID
		;
		drop table Rais2007;
		
		store Rais2007Final into [$(caminhoArquivos)\2007\Check1111-1112.csv] (txt);
exit script;
*/


end if
